/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Tableros;

import Casillas.Agua;
import Casillas.BarcoBergantin;
import Casillas.BarcoNavio;
import Casillas.BarcoPailebot;
import Casillas.BombaHecatombe;
import Casillas.BombaMisil;
import Casillas.BombaTorpedo;
import Casillas.Casillas;
import com.mycompany.batallanaval.Menu;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author carlo
 */
public class MenuTableros extends javax.swing.JFrame {

    /**
     * Creates new form MenuTableros
     */
    public MenuTableros() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnTableroFacil = new javax.swing.JButton();
        pnlTablero = new javax.swing.JPanel();
        btnRegresar = new javax.swing.JButton();
        lblBombas = new javax.swing.JLabel();
        lblCantBombas = new javax.swing.JLabel();
        lblBarcos = new javax.swing.JLabel();
        lblCantBarcos = new javax.swing.JLabel();
        lblFondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(400, 400));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitulo.setBackground(new java.awt.Color(51, 51, 51));
        lblTitulo.setFont(new java.awt.Font("Artifakt Element Heavy", 0, 36)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(255, 153, 0));
        lblTitulo.setText("BATALLA NAVAL");
        jPanel1.add(lblTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, -1, -1));

        jLabel1.setText("TABLEROS");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 90, -1, -1));

        btnTableroFacil.setText("FÃ¡cil");
        btnTableroFacil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTableroFacilActionPerformed(evt);
            }
        });
        jPanel1.add(btnTableroFacil, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, 110, -1));

        javax.swing.GroupLayout pnlTableroLayout = new javax.swing.GroupLayout(pnlTablero);
        pnlTablero.setLayout(pnlTableroLayout);
        pnlTableroLayout.setHorizontalGroup(
            pnlTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        pnlTableroLayout.setVerticalGroup(
            pnlTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );

        jPanel1.add(pnlTablero, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 50, 400, 400));

        btnRegresar.setBackground(new java.awt.Color(0, 0, 0));
        btnRegresar.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 14)); // NOI18N
        btnRegresar.setForeground(new java.awt.Color(255, 255, 255));
        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });
        jPanel1.add(btnRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 460, 120, -1));

        lblBombas.setText("Bombas:");
        jPanel1.add(lblBombas, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, -1, -1));

        lblCantBombas.setText("0");
        jPanel1.add(lblCantBombas, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, 30, -1));

        lblBarcos.setText("Barcos:");
        jPanel1.add(lblBarcos, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, -1, -1));

        lblCantBarcos.setText("0");
        jPanel1.add(lblCantBarcos, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 190, 30, -1));

        lblFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondomenu.jpg"))); // NOI18N
        lblFondo.setInheritsPopupMenu(false);
        lblFondo.setMaximumSize(new java.awt.Dimension(79, 26));
        lblFondo.setMinimumSize(new java.awt.Dimension(79, 26));
        jPanel1.add(lblFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 500));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed

        Menu menu = new Menu();
        menu.setLocationRelativeTo(null);
        menu.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnTableroFacilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTableroFacilActionPerformed
        mostrarTablero();
    }//GEN-LAST:event_btnTableroFacilActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuTableros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuTableros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuTableros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuTableros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuTableros().setVisible(true);
            }
        });
    }

    private Casillas[][] botonesAsignados;
    private Tableros tableros = new Tableros();
    private int cantidadBombas;
    private int cantBarcos = 0;

    public void mostrarTablero() {

        File f = new File("tablero1.txt");
        BufferedReader br;
        String cadena;
        String texto = "";
        int filas = 0, columnas = 0;
        int cantidadBotones = 0;
        String[][] dimTotal = null;
        String[] dimensiones = null;
        int contFila = 0;
        int contColumna = 0;
        String[] dim1 = null;
        boolean inicio = true;

        if (f.exists()) {
            try {
                br = new BufferedReader(new FileReader(f));

                while ((cadena = br.readLine()) != null) {
                    if (cadena.contains("dimensiones")) {
                        dim1 = cadena.split(" ");
                        dimensiones = dim1[1].split("x");
                        texto = dim1[0] + dim1[1];

                        filas = Integer.parseInt(dimensiones[0]);
                        columnas = Integer.parseInt(dimensiones[1]);

                        if (inicio) {
                            dimTotal = new String[filas][columnas];
                            inicio = false;
                        }
                    }

                    if (cadena.contains("~") || cadena.contains("B1") || cadena.contains("B2") || cadena.contains("B3") || cadena.contains("T") || cadena.contains("O") || cadena.contains("I")) {
                        dim1 = cadena.split(",");
                        contColumna = 0;
                        for (int i = 0; i < dim1.length; i++) {
                            dimTotal[contFila][contColumna] = dim1[i];
                            contColumna = contColumna + 1;
                        }
                        contFila = contFila + 1;
                    }
                }

                botonesAsignados = new Casillas[filas][columnas];
                cantidadBotones = filas * columnas;
                if (cantidadBotones <= 36) {
                    tableros.setCantidadBombasPartida(14);
                }
                if (cantidadBotones > 36 && cantidadBotones <= 64) {
                    tableros.setCantidadBombasPartida(12);
                }
                if (cantidadBotones > 64) {
                    tableros.setCantidadBombasPartida(7);
                }

                int cantBombas = 0;

//                for (int i = 0; i < filas; i++) {
//                    for (int j = 0; j < columnas; j++) {
//                        String prueba = dimTotal[i][j];
//                        switch (prueba) {
//                            case "~":
//                                botonesAsignados[i][j] = new Agua();
//                            case "B1" -> new BarcoPailebot();
//                            case "B2" -> new BarcoBergantin();
//                            case "B3" -> new BarcoNavio();
//                            case "I" -> new BombaMisil();
//                            case "T" -> new BombaTorpedo();
//                            case "O" -> new BombaHecatombe();
//                            default -> new Agua();
//                            };
//                    }
//                }
                for (int i = 0; i < filas; i++) {
                    for (int j = 0; j < columnas; j++) {
                        String prueba = dimTotal[i][j];
                        switch (prueba) {
                            case "~":
                                botonesAsignados[i][j] = new Agua(tableros);
                                break;
                            case "B1":
                                botonesAsignados[i][j] = new BarcoPailebot(tableros);
                                tableros.setCantidadBarcosTablero(tableros.getCantidadBarcosTablero() + 1);
                                break;
                            case "B2":
                                botonesAsignados[i][j] = new BarcoBergantin(tableros);
                                tableros.setCantidadBarcosTablero(tableros.getCantidadBarcosTablero() + 1);
                                break;
                            case "B3":
                                botonesAsignados[i][j] = new BarcoNavio(tableros);
                                tableros.setCantidadBarcosTablero(tableros.getCantidadBarcosTablero() + 1);
                                break;
                            case "I":
                                botonesAsignados[i][j] = new BombaMisil(tableros);
                                cantBombas = cantBombas + 1;
                                break;
                            case "T":
                                botonesAsignados[i][j] = new BombaTorpedo(tableros);
                                cantBombas = cantBombas + 1;
                                break;
                            case "O":
                                botonesAsignados[i][j] = new BombaHecatombe(tableros);
                                cantBombas = cantBombas + 1;
                                break;
                            default:
                                botonesAsignados[i][j] = new Agua(tableros);
                                break;
                        }
                    }
                }
                lblCantBombas.setText(String.valueOf(tableros.getCantidadBombasPartida()));
                lblCantBarcos.setText(String.valueOf(tableros.getCantidadBarcosTablero()));
                System.out.println("Cantidad Barcos: " + tableros.getCantidadBarcosTablero() + " Cantidad Bombas: " + tableros.getCantidadBombasPartida());
            } catch (IOException e) {
                System.out.println(e.getMessage());
            }

            for (int i = 0; i < filas; i++) {
                for (int j = 0; j < columnas; j++) {
                    //System.out.println(botonesAsignados[i][j].getCaracterCasillas());
                }
            }
        }
        int x, y;
        int casillaTamaÃ±oFilas = (400 / filas);
        int casillaTamaÃ±oColumnas = (400 / columnas);
        ButtonController bt = new ButtonController();

        for (int i = 0; i < filas; i++) {
            y = casillaTamaÃ±oFilas * i;
            for (int j = 0; j < columnas; j++) {
                x = casillaTamaÃ±oColumnas * j;
                botonesAsignados[i][j].setCoordenadaY(i);
                botonesAsignados[i][j].setCoordenadaX(j);

                botonesAsignados[i][j].setBackground(Color.blue);
                //int casillaTamaÃ±o = -5 +((int) (Toolkit.getDefaultToolkit().getScreenSize().getHeight() / botonesAsignados[0].length)) * 2 / 3;

                botonesAsignados[i][j].setBounds(x, y, casillaTamaÃ±oColumnas, casillaTamaÃ±oFilas);
                botonesAsignados[i][j].setFont(new Font("Arial", Font.PLAIN, (int) (8)));
                //botonesAsignados[i][j].setText(botonesAsignados[i][j].getCaracterCasillas());

                botonesAsignados[i][j].addActionListener(bt);
                pnlTablero.add(botonesAsignados[i][j]);
            }
        }
        pnlTablero.repaint();
        pnlTablero.revalidate();

    }

    public void actualizarTableros() {
        for (int i = 0; i < botonesAsignados.length; i++) {
            for (int j = 0; j < botonesAsignados[0].length; j++) {
                pnlTablero.add(botonesAsignados[i][j]);
            }
        }
        pnlTablero.repaint();
        pnlTablero.revalidate();
    }

    public void cerrarPartida(String mensaje) {
        JOptionPane.showMessageDialog(this, mensaje+tableros.getPuntosPartida(), "Partida terminada", JOptionPane.INFORMATION_MESSAGE);
        Menu menu = new Menu();
        menu.setLocationRelativeTo(null);
        menu.setVisible(true);
        // Se cierra este formulario
        this.dispose();
    }

    private class ButtonController implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {

            for (int i = 0; i < botonesAsignados.length; i++) {
                for (int j = 0; j < botonesAsignados[0].length; j++) {
                    System.out.println(botonesAsignados[i][j].getCaracterCasillas());
                    if (e.getSource().equals(botonesAsignados[i][j])) {
                        try {
                            if (tableros.getCantidadBombasPartida() > 0) {
                                if (!botonesAsignados[i][j].isRevelada()) {
                                    switch (botonesAsignados[i][j].getCaracterCasillas()) {
                                        case "Agua":

                                            botonesAsignados = botonesAsignados[i][j].accionBoton(botonesAsignados);
                                            break;
                                        case "Pailebot":
                                            botonesAsignados = botonesAsignados[i][j].accionBoton(botonesAsignados);
                                            break;
                                        case "Bergantin":
                                            botonesAsignados = botonesAsignados[i][j].accionBoton(botonesAsignados);
                                            break;
                                        case "Navio":
                                            botonesAsignados = botonesAsignados[i][j].accionBoton(botonesAsignados);
                                            break;
                                        case "Misil":
                                            botonesAsignados = botonesAsignados[i][j].accionBoton(botonesAsignados);
                                            break;
                                        case "Torpedo":
                                            botonesAsignados = botonesAsignados[i][j].accionBoton(botonesAsignados);
                                            break;
                                        case "Hecatombe":
                                            botonesAsignados = botonesAsignados[i][j].accionBoton(botonesAsignados);
                                            break;
                                        default:
                                            throw new AssertionError();
                                    }
                                    tableros.setCantidadBombasPartida(tableros.getCantidadBombasPartida() - 1);
                                }
                                lblCantBombas.setText(String.valueOf(tableros.getCantidadBombasPartida()));
                                lblCantBarcos.setText(String.valueOf(tableros.getCantidadBarcosTablero()));
                                if (tableros.getCantidadBarcosTablero() <= 0) {
                                    //GanÃ³ la partida
                                    cerrarPartida("Ganaste, has defendido a tu naciÃ³n");
                                } else{
                                    if (tableros.getCantidadBombasPartida() <= 0) {
                                        System.out.println("Te quedaste sin bombas, mi helmano");
                                        jLabel1.setText("Perdiste");
                                        //PerdiÃ³ la partida
                                        cerrarPartida("Perdiste, te has quedado sin bombas");
                                    }
                                }
                            }
                        } catch (IOException ex) {
                            Logger.getLogger(MenuTableros.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegresar;
    private javax.swing.JButton btnTableroFacil;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblBarcos;
    private javax.swing.JLabel lblBombas;
    private javax.swing.JLabel lblCantBarcos;
    private javax.swing.JLabel lblCantBombas;
    private javax.swing.JLabel lblFondo;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JPanel pnlTablero;
    // End of variables declaration//GEN-END:variables
}
